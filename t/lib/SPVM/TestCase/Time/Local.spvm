class TestCase::Time::Local {
  use Sys::Time;
  use Sys::Time::Tm;
  use Time::Local;
  
  static method time_info : int () {
    my $time_info = Sys::Time::Tm->new;
    
    unless ($time_info isa Sys::Time::Tm) {
      return 0;
    }
    
    return 1;
  }
  
  static method time : long () {
    my $time = Sys::Time->time;
    
    return $time;
  }

  static method localtime : Sys::Time::Tm ($time : long) {
    my $time_info = Sys::Time->localtime($time);
    
    return $time_info;
  }

  static method gmtime : Sys::Time::Tm ($time : long) {
    my $time_info = Sys::Time->gmtime($time);
    
    return $time_info;
  }

  static method timelocal : int () {
    {
      my $time = Sys::Time->time();
      
      my $time_info = Sys::Time->localtime($time);
      
      my $time_ret = Time::Local->timelocal($time_info);
      
      unless ($time_ret isa long) {
        return 0;
      }
      unless ($time == $time_ret) {
        return 0;
      }
    }
    
    return 1;
  }

  static method timegm : int () {
    {
      my $time = Sys::Time->time();
      
      my $time_info = Sys::Time->gmtime($time);
      
      my $time_ret = Time::Local->timegm($time_info);

      unless ($time_ret isa long) {
        return 0;
      }
      unless ($time == $time_ret) {
        return 0;
      }
    }
    
    return 1;
  }

}
